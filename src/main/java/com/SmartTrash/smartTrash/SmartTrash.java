package com.smarttrash;

import com.smarttrash.ai.TrashAI;
import com.smarttrash.gui.TrashGUI;
import com.smarttrash.managers.QuantumRecycler;
import com.smarttrash.managers.StatsManager;
import com.smarttrash.listeners.GUIListener;
import com.smarttrash.testing.TrashTester;
import org.bukkit.Bukkit;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;

import java.util.logging.Logger;

public class SmartTrash extends JavaPlugin {

    private static SmartTrash instance;
    private TrashGUI guiManager;
    private StatsManager statsManager;
    private TrashAI trashAI;
    private QuantumRecycler quantumRecycler;
    private TrashTester trashTester;
    private Logger logger;

    @Override
    public void onEnable() {
        instance = this;
        this.logger = getLogger();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ 2025
        this.guiManager = new TrashGUI();
        this.statsManager = new StatsManager();
        this.trashAI = new TrashAI();
        this.quantumRecycler = new QuantumRecycler();
        this.trashTester = new TrashTester();

        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π
        Bukkit.getPluginManager().registerEvents(new GUIListener(), this);

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞
        saveDefaultConfig();

        // –ó–∞–ø—É—Å–∫ AI –∑–∞–¥–∞—á
        startAITasks();

        logger.info("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        logger.info("‚ïë         SMART TRASH 2025 v1.0        ‚ïë");
        logger.info("‚ïë      AI + Quantum Recycling          ‚ïë");
        logger.info("‚ïë      Minecraft 1.21.8 Ready          ‚ïë");
        logger.info("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
        logger.info("üîß –ö–æ–º–∞–Ω–¥—ã: /trash, /trashai, /trashstats, /trashquantum, /trashtest");
    }

    @Override
    public void onDisable() {
        statsManager.saveAllStats();
        logger.info("üî¥ SmartTrash 2025 –æ—Ç–∫–ª—é—á–µ–Ω");
    }

    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (!(sender instanceof Player player)) {
            sender.sendMessage("üî¥ –¢–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!");
            return true;
        }

        String cmd = command.getName().toLowerCase();

        switch (cmd) {
            case "trash":
                guiManager.openMainMenu(player);
                return true;

            case "trashai":
                trashAI.analyzeInventory(player);
                return true;

            case "trashstats":
                statsManager.showAdvancedStats(player);
                return true;

            case "trashquantum":
                if (player.hasPermission("smarttrash.quantum")) {
                    quantumRecycler.openQuantumMenu(player);
                } else {
                    player.sendMessage("üîí –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∫–≤–∞–Ω—Ç–æ–≤–æ–π –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏!");
                }
                return true;

            case "trashtest":
                if (player.hasPermission("smarttrash.test")) {
                    trashTester.runTests(player);
                } else {
                    player.sendMessage("üîí –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!");
                }
                return true;
        }

        return false;
    }

    private void startAITasks() {
        // –ê–≤—Ç–æ-–∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        Bukkit.getScheduler().runTaskTimer(this, () -> {
            logger.info("ü§ñ AI: –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö...");
            statsManager.cleanOldData();
        }, 6000L, 6000L);
    }

    public static SmartTrash getInstance() {
        return instance;
    }

    public TrashGUI getGuiManager() {
        return guiManager;
    }

    public StatsManager getStatsManager() {
        return statsManager;
    }

    public TrashAI getTrashAI() {
        return trashAI;
    }

    public QuantumRecycler getQuantumRecycler() {
        return quantumRecycler;
    }

    public TrashTester getTrashTester() {
        return trashTester;
    }
}